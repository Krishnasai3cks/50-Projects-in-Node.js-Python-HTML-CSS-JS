const tooltip = document.getElementById('tooltip');

fetch("https://raw.githubusercontent.com/freeCodeCamp/ProjectReferenceData/master/cyclist-data.json")
  .then(res => res.json())
  .then(res => {
  bday(res);
});
// Doping: "Alleged drug use during 1995 due to high hematocrit levels"
// Name: "Marco Pantani"
// Nationality: "ITA"
// Place: 1
// Seconds: 2210
// Time: "36:50"
// URL: "https://en.wikipedia.org/wiki/Marco_Pantani#Alleged_drug_use"
// Year: 1995
function bday(data){
  console.log(JSON.stringify(new Date(data[0].Time)))
  const width = 800;
  const height = 500;
  const padding = 60;
  const svg = d3.select('#container').append("svg")
  .attr('width',width)
  .attr('height',height);
  
    data.forEach(function(d) {
    d.Place = +d.Place;
    var parsedTime = d.Time.split(':');
    d.Time = new Date(1970, 0, 1, 0, parsedTime[0], parsedTime[1]);
  })
  
  

  const xScale = d3.scaleLinear()
  .domain([d3.min(data, d =>d.Year-1),d3.max(data,d=> d.Year +1)])
  .range([padding,width - padding]);
  
  const yScale = d3.scaleTime()
  .domain(d3.extent(data, function(d) {
    return d.Time;
  }))
  .range([padding,height -padding]);
  
  const formatTime = d3.timeFormat("%M:%S");
  
  const xAxis = d3.axisBottom(xScale).tickFormat(d3.format('d'));
  const yAxis = d3.axisLeft(yScale).tickFormat(formatTime);
  
  
  //values start here 
 
  svg.selectAll(".dot")
    .data(data)
    .enter()
    .append("circle")
    .attr("class", "dot")
    .attr("r", 6)
    .attr("cx", function(d) {
      return xScale(d.Year);
    })
    .attr("cy", function(d) {
      return yScale(d.Time);
    })
     .attr("data-xvalue", function(d){
      return d.Year;
    }) .attr("data-yvalue", function(d){
      return d.Time.toString();
    })
    .style('fill',(d,i) => (d.Doping ==="") ? "red": 'blue')
    .on('mouseenter',function(d){
    svg.append('text')
     .attr('class','buah')
     .attr('id','tooltip')
    .attr("data-year", d.Year) 
     .attr('x',d3.event.pageX - padding-50)
     .attr('y',d3.event.pageY - padding + 5)
    .text('name: '+d.Name +' year: '+d.Year)
  })
  .on('mouseout',function(d){
    svg.selectAll('.buah').remove();
  })
     ;
  
  //values end here
  
  svg.append('g')
      .attr('id', 'x-axis')

   .attr('transform', `translate(0, ${height - padding})`)
   .call(xAxis)
  svg.append('g')
      .attr('id', 'y-axis')

   .call(yAxis)
     .attr('transform', `translate(${padding},0)`);
  
  
  const legend = svg.append('g')
  .attr('id','legend')
  .append('rect')
  .attr('x',700)
  .attr('y',200)
  .attr('width',20).
  attr('height',20)
    .attr('fill','red')
  
  svg.append('rect')
  .attr('x',700)
  .attr('y',230)
  .attr('width',20).
  attr('height',20)
    .attr('fill','blue');
 svg.append('text')
  .attr('x',730)
  .attr('y',245)
   .text('doping');
  svg.append('text')
  .attr('x',730)
  .attr('y',215)
  
  .text('no doping');
  
}